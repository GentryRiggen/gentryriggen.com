version: 2.1

executors:
  my-executor:
    docker:
      - image: circleci/node:latest-browsers
    working_directory: ~/project

jobs:
  test:
    executor: my-executor
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Run Unit/Integration Tests
          command: yarn test --coverage
  testEndToEnds:
    executor: my-executor
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Start the dev server
          command: ./runServerBackground.sh
      - run:
          name: Run End to End Tests
          command: yarn test:e2e
  deploy:
    executor: my-executor
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Build the app
          command: yarn build
      - run:
          name: Deploy Master to Firebase
          command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN

workflows:
  Test:
    jobs:
      - test:
          filters:
            branches:
              ignore: master
      - testEndToEnds:
          filters:
            branches:
              ignore: master
  Deploy:
    jobs:
      - test:
          filters:
            branches:
              only: master
      - testEndToEnds:
          filters:
            branches:
              only: master
      - deploy:
          requires:
              - testEndToEnds
              - test
          filters:
            branches:
              only: master

